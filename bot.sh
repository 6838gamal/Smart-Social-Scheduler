#!/usr/bin/env bash
# smart_shell_bot_setup.sh
# ุณูุฑุจุช ุชููุฆุฉ ุขูู ูุจูุช ุชูุบุฑุงู ูGoogle OAuth
# ูููุดุฆ ููู .env ูุคูู ููุถูู ุณุทุฑูุง ูุงุณุชุฏุนุงุฆู ูู ~/.bashrc (ุงุฎุชูุงุฑู)
# ุงุณุชุฎุฏุงู: chmod +x smart_shell_bot_setup.sh && ./smart_shell_bot_setup.sh

set -euo pipefail
IFS=$'\n\t'

ENV_FILE="$HOME/.smart_bot_env"
BASHRC="$HOME/.bashrc"
BACKUP_BASHRC="$HOME/.bashrc.smart_bot_backup"

prompt_secret() {
  local var_name="$1"
  local current
  current="$(grep -E "^${var_name}=" "$ENV_FILE" 2>/dev/null || true)"
  if [[ -n "$current" ]]; then
    echo "ููุฌูุฏ: ูุชุบูุฑ $var_name ููุฌูุฏ ูู $ENV_FILE. ูู ุชุฑูุฏ ุงุณุชุจุฏุงููุ [y/N]"
    read -r ans
    if [[ ! "$ans" =~ ^[Yy] ]]; then
      echo "ุชุฎุทู $var_name"
      return
    fi
  fi
  echo -n "ุฃุฏุฎู ูููุฉ $var_name (ูู ุชุธูุฑ ุนูู ุงูุดุงุดุฉ): "
  read -rs value
  echo
  # Escape any existing double quotes and backslashes
  escaped_value="${value//\\/\\\\}"
  escaped_value="${escaped_value//\"/\\\"}"
  # Remove existing line and append
  sed -i.bak "/^${var_name}=/d" "$ENV_FILE" 2>/dev/null || true
  printf "%s=\"%s\"\n" "$var_name" "$escaped_value" >> "$ENV_FILE"
  echo "โ ุชู ุญูุธ $var_name ูู $ENV_FILE"
}

ensure_env_file() {
  if [[ ! -f "$ENV_FILE" ]]; then
    touch "$ENV_FILE"
    chmod 600 "$ENV_FILE"
    echo "# ููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูุจูุชุงุช Smart Shell" > "$ENV_FILE"
    echo "# ูุง ุชุดุงุฑู ูุฐุง ุงูููู ูุน ุฃู ุดุฎุต" >> "$ENV_FILE"
    echo "โ ุชู ุฅูุดุงุก $ENV_FILE ูุญูุงูุชู ุจุตูุงุญูุงุช 600"
  else
    chmod 600 "$ENV_FILE" || true
    echo "โน๏ธ ููุฌุฏ $ENV_FILE โ ุชู ุถุจุท ุงูุตูุงุญูุงุช ุนูู 600"
  fi
}

add_source_to_bashrc() {
  local marker="# >>> smart_shell_bot_env >>>"
  if grep -q "$marker" "$BASHRC" 2>/dev/null; then
    echo "โน๏ธ ูุจุฏู ุฃู $BASHRC ูุญุชูู ุจุงููุนู ุนูู ุณุทุฑ ุชุญููู ูุชุบูุฑุงุช Smart Shell"
    return
  fi
  cp "$BASHRC" "$BACKUP_BASHRC"
  cat >> "$BASHRC" <<EOF

$marker
# ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุงูุฎุงุตุฉ ุจุจูุช Smart Shell
if [ -f \"$ENV_FILE\" ]; then
  # ุชุตุฏูุฑ ูุง ูุฑุฏ ูู ุงูููู (ุณุทุฑ ุจุตูุบุฉ VAR="value")
  set -a
  # shellcheck disable=SC1090
  source "$ENV_FILE"
  set +a
fi
# <<< smart_shell_bot_env <<<
EOF
  echo "โ ุชูุช ุฅุถุงูุฉ ุงุณุชุฏุนุงุก $ENV_FILE ุฅูู $BASHRC (ูุณุฎุฉ ุงุญุชูุงุทูุฉ: $BACKUP_BASHRC)"
}

print_summary() {
  echo
  echo "============================"
  echo "ููู ุงูุฅุนุฏุงุฏ: $ENV_FILE"
  echo "ุตูุงุญูุงุช ุงูููู: $(stat -c '%a' "$ENV_FILE" 2>/dev/null || stat -f '%A' "$ENV_FILE")"
  echo "ููุนุฑูุฉ ุงูููู ุงูุญุงููุฉ (ุขูู):"
  grep -E "^[A-Z_]+=\".*\"$" "$ENV_FILE" | sed -E 's/(=)\".*\"/\1"โขโขโขโข"/' || true
  echo "============================"
  echo
}

remove_secrets() {
  echo "ูู ุชุฑูุฏ ุฅุฒุงูุฉ ุฌููุน ูุชุบูุฑุงุช Smart Shell ูู $ENV_FILEุ [y/N]"
  read -r ans
  if [[ "$ans" =~ ^[Yy] ]]; then
    > "$ENV_FILE"
    chmod 600 "$ENV_FILE"
    echo "โ ุชู ุชูุธูู $ENV_FILE (ุงูุฃุตู ูุญููุธ ูู ${ENV_FILE}.bak ุฅุฐุง ูุฒู)"
  else
    echo "ุฅูุบุงุก ุงูุฅุฒุงูุฉ"
  fi
}

show_menu() {
  cat <<'MENU'

======== Smart Shell Bot Setup ========
ุงุฎุชุฑ ุฎูุงุฑูุง:
1) ุชููุฆุฉ ููู .env ูุคูู (ุฅูุดุงุก/ุชุญุฏูุซ)
2) ุฅุถุงูุฉ ุงุณุชุฏุนุงุก ุงูููู ุฅูู ~/.bashrc (ุขูู)
3) ุฅุถุงูุฉ ูุชุบูุฑุงุช ุชููุบุฑุงู ูGoogle (ูุทุงุจู ููุชุบูุฑุงุชู)
4) ุญุฐู ูู ุงููุชุบูุฑุงุช ูู ุงูููู
5) ุทุจุงุนุฉ ููุฎุต
6) ุงูุฎุฑูุฌ
MENU
}

# ุงุจุฏุฃ
ensure_env_file
while true; do
  show_menu
  echo -n "ุงุฎุชุฑ ุฑูู: "
  read -r choice
  case "$choice" in
    1)
      echo "โ ููู ุงูุจูุฆุฉ ููุฌูุฏ: $ENV_FILE"
      ;;
    2)
      add_source_to_bashrc
      ;;
    3)
      echo "ุณุชุชู ูุทุงูุจุชู ุจุฅุฏุฎุงู ุงููุชุบูุฑุงุช ุงูุชุงููุฉ (ูู ุชุธูุฑ ุฃุซูุงุก ุงููุชุงุจุฉ):"
      echo "- BOT_TOKEN (ูุซุงู: 123:ABC..)
- GOOGLE_CLIENT_ID
- GOOGLE_CLIENT_SECRET
- API_ID
- API_HASH
- OPTIONAL: ADMIN_CHAT_ID (ูุฅุดุนุงุฑุงุช)
"
      prompt_secret "BOT_TOKEN"
      prompt_secret "GOOGLE_CLIENT_ID"
      prompt_secret "GOOGLE_CLIENT_SECRET"
      prompt_secret "API_ID"
      prompt_secret "API_HASH"
      prompt_secret "ADMIN_CHAT_ID"
      echo "โ ุชู ุฅุถุงูุฉ ุงููุชุบูุฑุงุช ุงููุทููุจุฉ. ุชุฐูุฑ ุนุฏู ูุดุงุฑูุฉ ุงูููู ุฃู ุตูุฑุฉ ูู ุงูุดุงุดุฉ ุงูุชู ุชุญุชููู."
      ;;
    4)
      remove_secrets
      ;;
    5)
      print_summary
      ;;
    6)
      echo "ูุน ุงูุณูุงูุฉ ๐"
      exit 0
      ;;
    *)
      echo "ุฎูุงุฑ ุบูุฑ ุตุงูุญ. ุญุงูู ูุฑุฉ ุฃุฎุฑู."
      ;;
  esac
done
